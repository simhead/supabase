- name: Check if jwt_anonKey and jwt_serviceKey are defined or empty
  set_fact:
    jwt_anonKey: "{{ jwt_anonKey if jwt_anonKey is defined else '' }}"
    jwt_serviceKey: "{{ jwt_serviceKey if jwt_serviceKey is defined else '' }}"

- name: PRE - Debug the generated keys
  debug:
    msg:
      - "jwt_anonKey: {{ jwt_anonKey }}"
      - "jwt_serviceKey: {{ jwt_serviceKey }}"

- name: Copy the JWT generation script to the target machine
  template:
    src: generate_jwt_keys.j2
    dest: /tmp/generate_jwt_keys.sh
    mode: '0755'

- name: Run the JWT generation script if keys are empty
  shell: /tmp/generate_jwt_keys.sh
  register: jwt_keys_output
  when: jwt_anonKey == '' or jwt_serviceKey == ''

- name: Parse the generated keys and update facts
  set_fact:
    jwt_anonKey: "{{ jwt_keys_output.stdout_lines | select('search', 'jwt_anonKey') | first | regex_replace('jwt_anonKey=', '') }}"
    jwt_serviceKey: "{{ jwt_keys_output.stdout_lines | select('search', 'jwt_serviceKey') | first | regex_replace('jwt_serviceKey=', '') }}"
  when: jwt_keys_output is defined

- name: POST - Debug the generated keys
  debug:
    msg:
      - "jwt_anonKey: {{ jwt_anonKey }}"
      - "jwt_serviceKey: {{ jwt_serviceKey }}"

- name: Clone Supabase Kubernetes repository
  git:
    repo: https://github.com/supabase-community/supabase-kubernetes
    dest: /root/supabase/github

- name: Change to the charts directory
  shell: |
    cd /root/supabase/github/charts/supabase && pwd
  register: supabase_chart_dir
  changed_when: false

- name: Define supabase helm values.yaml for deployment
  template:
    src: "values.oke.yaml.j2"
    dest: "/root/supabase/values.oke.yaml"
    mode: '0755'

- name: Check if Helm release exists
  shell: helm list -n {{ supabase_namespace }} --filter {{ supabase_namespace }} -q
  register: helm_release_check
  changed_when: false

- name: Install or upgrade the Helm chart
  shell: |
    cd /root/supabase/github/charts/supabase
    {% if helm_release_check.stdout == '' %}
    helm install {{ supabase_namespace }} -n {{ supabase_namespace }} -f /root/supabase/values.oke.yaml .
    {% else %}
    helm upgrade {{ supabase_namespace }} -n {{ supabase_namespace }} -f /root/supabase/values.oke.yaml .
    {% endif %}
  args:
    chdir: "/root/supabase/github/charts/supabase"
  register: helm_install_or_upgrade

- name: Debug Helm result
  debug:
    msg: "Helm {{ 'installed' if helm_release_check.stdout == '' else 'upgraded' }} successfully"